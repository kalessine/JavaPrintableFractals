package fractal.gui.old;
import fractal.gui.*;
import fractal.producer.JpegImageWriteParam;
import fractal.producer.formula.Mandelbrot;
import fractal.producer.formula.Formula;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.Iterator;
import java.util.Properties;
import javax.imageio.IIOImage;
import javax.imageio.ImageIO;
import javax.imageio.ImageWriteParam;
import javax.imageio.ImageWriter;
import javax.imageio.stream.ImageOutputStream;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import java.math.BigDecimal;
import fractal.producer.*;
public class FractalJFrame extends javax.swing.JFrame {
    
    /** Creates new form FractalJFrame */
    public FractalJFrame() {
        initComponents();
        fractalButtonGroup.setSelected(jRadioButtonMenuItemFastMandelbrot.getModel(),true);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        fractalButtonGroup = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        fractalViewJPanel1 = new fractal.gui.FractalViewJPanel();
        jPanel1 = new javax.swing.JPanel();
        jButtonReset = new javax.swing.JButton();
        jtMaxIterations = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemLoadPosition = new javax.swing.JMenuItem();
        jMenuItemSavePosition = new javax.swing.JMenuItem();
        jMenuItemSaveAsJpeg = new javax.swing.JMenuItem();
        jMenuItemSaveAsPdf = new javax.swing.JMenuItem();
        jmExit = new javax.swing.JMenuItem();
        jMenuFractal = new javax.swing.JMenu();
        jRadioButtonMenuItemFastMandelbrot = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemMandelbrot = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemJulia = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemCubic = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemCubicJulia = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemQuartic = new javax.swing.JRadioButtonMenuItem();
        jRadioButtonMenuItemSquareCube = new javax.swing.JRadioButtonMenuItem();
        jMenuAspect = new javax.swing.JMenu();
        jMenuItemSquare = new javax.swing.JMenuItem();
        jMenuItemAPortrait = new javax.swing.JMenuItem();
        jMenuItemALandscape = new javax.swing.JMenuItem();
        jMenuColours = new javax.swing.JMenu();
        jMenuItemEditColours = new javax.swing.JMenuItem();
        jMenuItemLoadColourScheme = new javax.swing.JMenuItem();
        jMenuItemSaveColourScheme = new javax.swing.JMenuItem();
        jMenuPrecision = new javax.swing.JMenu();
        jMenuItemHardware = new javax.swing.JMenuItem();
        jMenuItem32Places = new javax.swing.JMenuItem();
        jMenuItem64Places = new javax.swing.JMenuItem();
        jMenuItem128Places = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        org.jdesktop.layout.GroupLayout fractalViewJPanel1Layout = new org.jdesktop.layout.GroupLayout(fractalViewJPanel1);
        fractalViewJPanel1.setLayout(fractalViewJPanel1Layout);
        fractalViewJPanel1Layout.setHorizontalGroup(
            fractalViewJPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 899, Short.MAX_VALUE)
        );
        fractalViewJPanel1Layout.setVerticalGroup(
            fractalViewJPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 331, Short.MAX_VALUE)
        );
        jScrollPane1.setViewportView(fractalViewJPanel1);

        jButtonReset.setText("Reset");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        jtMaxIterations.setText("249");
        jtMaxIterations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtMaxIterationsActionPerformed(evt);
            }
        });

        jLabel1.setText("Iterations");

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jButtonReset, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 68, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(17, 17, 17)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jtMaxIterations, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 52, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(430, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonReset, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jtMaxIterations, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .add(43, 43, 43))
        );

        jMenuFile.setText("File");
        jMenuItemLoadPosition.setText("Load Position");
        jMenuItemLoadPosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLoadPositionActionPerformed(evt);
            }
        });

        jMenuFile.add(jMenuItemLoadPosition);

        jMenuItemSavePosition.setText("Save Position (.pos)");
        jMenuItemSavePosition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSavePositionActionPerformed(evt);
            }
        });

        jMenuFile.add(jMenuItemSavePosition);

        jMenuItemSaveAsJpeg.setText("Save As Jpeg Image (.jpg)");
        jMenuItemSaveAsJpeg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveAsJpegActionPerformed(evt);
            }
        });

        jMenuFile.add(jMenuItemSaveAsJpeg);

        jMenuItemSaveAsPdf.setText("Save as Pdf (.pdf)");
        jMenuItemSaveAsPdf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveAsPdfActionPerformed(evt);
            }
        });

        jMenuFile.add(jMenuItemSaveAsPdf);

        jmExit.setText("Exit");
        jmExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmExitActionPerformed(evt);
            }
        });

        jMenuFile.add(jmExit);

        jMenuBar1.add(jMenuFile);

        jMenuFractal.setText("Fractal Algorithm");
        fractalButtonGroup.add(jRadioButtonMenuItemFastMandelbrot);
        jRadioButtonMenuItemFastMandelbrot.setText("Fast Mandelbrot");
        jRadioButtonMenuItemFastMandelbrot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemFastMandelbrotActionPerformed(evt);
            }
        });

        jMenuFractal.add(jRadioButtonMenuItemFastMandelbrot);

        fractalButtonGroup.add(jRadioButtonMenuItemMandelbrot);
        jRadioButtonMenuItemMandelbrot.setText("Mandelbrot");
        jRadioButtonMenuItemMandelbrot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemMandelbrotActionPerformed(evt);
            }
        });

        jMenuFractal.add(jRadioButtonMenuItemMandelbrot);

        fractalButtonGroup.add(jRadioButtonMenuItemJulia);
        jRadioButtonMenuItemJulia.setText("Julia");
        jRadioButtonMenuItemJulia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemJuliaActionPerformed(evt);
            }
        });

        jMenuFractal.add(jRadioButtonMenuItemJulia);

        fractalButtonGroup.add(jRadioButtonMenuItemCubic);
        jRadioButtonMenuItemCubic.setText("Cubic Mandelbrot");
        jRadioButtonMenuItemCubic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemCubicActionPerformed(evt);
            }
        });

        jMenuFractal.add(jRadioButtonMenuItemCubic);

        fractalButtonGroup.add(jRadioButtonMenuItemCubicJulia);
        jRadioButtonMenuItemCubicJulia.setText("Cubic Julia");
        jRadioButtonMenuItemCubicJulia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemCubicJuliaActionPerformed(evt);
            }
        });

        jMenuFractal.add(jRadioButtonMenuItemCubicJulia);

        fractalButtonGroup.add(jRadioButtonMenuItemQuartic);
        jRadioButtonMenuItemQuartic.setText("Quartic Mandelbrot");
        jRadioButtonMenuItemQuartic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemQuarticActionPerformed(evt);
            }
        });

        jMenuFractal.add(jRadioButtonMenuItemQuartic);

        fractalButtonGroup.add(jRadioButtonMenuItemSquareCube);
        jRadioButtonMenuItemSquareCube.setText("Square Cube Mandelbrot");
        jRadioButtonMenuItemSquareCube.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonMenuItemSquareCubeActionPerformed(evt);
            }
        });

        jMenuFractal.add(jRadioButtonMenuItemSquareCube);

        jMenuBar1.add(jMenuFractal);

        jMenuAspect.setText("Aspect Ratio");
        jMenuItemSquare.setText("Square Aspect");
        jMenuItemSquare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSquareActionPerformed(evt);
            }
        });

        jMenuAspect.add(jMenuItemSquare);

        jMenuItemAPortrait.setText("A Series Portrait");
        jMenuItemAPortrait.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAPortraitActionPerformed(evt);
            }
        });

        jMenuAspect.add(jMenuItemAPortrait);

        jMenuItemALandscape.setText("A Series Landscape");
        jMenuItemALandscape.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemALandscapeActionPerformed(evt);
            }
        });

        jMenuAspect.add(jMenuItemALandscape);

        jMenuBar1.add(jMenuAspect);

        jMenuColours.setText("Colours");
        jMenuItemEditColours.setText("Edit Colours");
        jMenuItemEditColours.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEditColoursActionPerformed(evt);
            }
        });

        jMenuColours.add(jMenuItemEditColours);

        jMenuItemLoadColourScheme.setText("Load Colour Scheme");
        jMenuItemLoadColourScheme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemLoadColourSchemeActionPerformed(evt);
            }
        });

        jMenuColours.add(jMenuItemLoadColourScheme);

        jMenuItemSaveColourScheme.setText("Save Colour Scheme");
        jMenuItemSaveColourScheme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSaveColourSchemeActionPerformed(evt);
            }
        });

        jMenuColours.add(jMenuItemSaveColourScheme);

        jMenuBar1.add(jMenuColours);

        jMenuPrecision.setText("Precision");
        jMenuItemHardware.setText("Hardware(Low Precision)");
        jMenuItemHardware.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemHardwareActionPerformed(evt);
            }
        });

        jMenuPrecision.add(jMenuItemHardware);

        jMenuItem32Places.setText("32 Decimal Places");
        jMenuItem32Places.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem32PlacesActionPerformed(evt);
            }
        });

        jMenuPrecision.add(jMenuItem32Places);

        jMenuItem64Places.setText("64 Decimal Places");
        jMenuItem64Places.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem64PlacesActionPerformed(evt);
            }
        });

        jMenuPrecision.add(jMenuItem64Places);

        jMenuItem128Places.setText("128 Decimal Places");
        jMenuItem128Places.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem128PlacesActionPerformed(evt);
            }
        });

        jMenuPrecision.add(jMenuItem128Places);

        jMenuBar1.add(jMenuPrecision);

        setJMenuBar(jMenuBar1);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 857, Short.MAX_VALUE)
                        .addContainerGap())
                    .add(layout.createSequentialGroup()
                        .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(243, 243, 243))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonMenuItemCubicJuliaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemCubicJuliaActionPerformed
    //     fractalViewJPanel1.setProducer(new CubicJulia(fractalViewJPanel1.getCenterX(),fractalViewJPanel1.getCenterY()));
    //     fractalViewJPanel1.regenerate();
    }//GEN-LAST:event_jRadioButtonMenuItemCubicJuliaActionPerformed

    private void jRadioButtonMenuItemSquareCubeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemSquareCubeActionPerformed
    //    fractalViewJPanel1.setProducer(new SquareCubeMandelbrot());
    //    fractalViewJPanel1.regenerate();
    }//GEN-LAST:event_jRadioButtonMenuItemSquareCubeActionPerformed

    private void jRadioButtonMenuItemQuarticActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemQuarticActionPerformed
    //   fractalViewJPanel1.setProducer(new QuarticMandelbrot());
    //   fractalViewJPanel1.regenerate();
    }//GEN-LAST:event_jRadioButtonMenuItemQuarticActionPerformed

    private void jRadioButtonMenuItemCubicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemCubicActionPerformed
    //     fractalViewJPanel1.setProducer(new CubicMandelbrot());
    //    fractalViewJPanel1.regenerate();
    }//GEN-LAST:event_jRadioButtonMenuItemCubicActionPerformed

    private void jRadioButtonMenuItemJuliaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemJuliaActionPerformed
    //   fractalViewJPanel1.setProducer(new Julia(fractalViewJPanel1.getCenterX(),fractalViewJPanel1.getCenterY()));
    //     fractalViewJPanel1.regenerate();
    }//GEN-LAST:event_jRadioButtonMenuItemJuliaActionPerformed

    private void jRadioButtonMenuItemFastMandelbrotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemFastMandelbrotActionPerformed
    //     fractalViewJPanel1.setProducer(new FastMandelbrot());
    //     fractalViewJPanel1.regenerate();
    }//GEN-LAST:event_jRadioButtonMenuItemFastMandelbrotActionPerformed

    private void jRadioButtonMenuItemMandelbrotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMenuItemMandelbrotActionPerformed
         fractalViewJPanel1.setProducer(new Mandelbrot());
         fractalViewJPanel1.regenerate();
    }//GEN-LAST:event_jRadioButtonMenuItemMandelbrotActionPerformed

    private void jMenuItem128PlacesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem128PlacesActionPerformed
       fractalViewJPanel1.setPrecision(FractalViewJPanel.PRECISION_128_PLACES);
    }//GEN-LAST:event_jMenuItem128PlacesActionPerformed

    private void jMenuItem64PlacesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem64PlacesActionPerformed
       fractalViewJPanel1.setPrecision(FractalViewJPanel.PRECISION_64_PLACES);
    }//GEN-LAST:event_jMenuItem64PlacesActionPerformed

    private void jMenuItem32PlacesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem32PlacesActionPerformed
       fractalViewJPanel1.setPrecision(FractalViewJPanel.PRECISION_32_PLACES);
    }//GEN-LAST:event_jMenuItem32PlacesActionPerformed

    private void jMenuItemHardwareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemHardwareActionPerformed
       fractalViewJPanel1.setPrecision(FractalViewJPanel.PRECISION_HARDWARE);
    }//GEN-LAST:event_jMenuItemHardwareActionPerformed

    private void jMenuItemSaveColourSchemeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveColourSchemeActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.showSaveDialog(this);
        File file = chooser.getSelectedFile();
        if( file == null ) return;
        try{
        fractalViewJPanel1.getColourMap().save(file);
        }catch(IOException io) {
            JOptionPane.showMessageDialog(this,"IO Error Saving Colour Scheme","Error Saving Colour Scheme",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemSaveColourSchemeActionPerformed

    private void jMenuItemLoadColourSchemeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLoadColourSchemeActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.showOpenDialog(this);
        File file = chooser.getSelectedFile();
        if( file == null ) return;
        try{
        fractalViewJPanel1.getColourMap().load(file);
        }catch(IOException io) {
            JOptionPane.showMessageDialog(this,"IO Error Loading Colour Scheme","Error Loading Colour Scheme",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jMenuItemLoadColourSchemeActionPerformed

    private void jtMaxIterationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtMaxIterationsActionPerformed
           fractalViewJPanel1.getProducer().setMaxIteration(Integer.parseInt(jtMaxIterations.getText()));
           fractalViewJPanel1.getColourMap().setMapSize(Integer.parseInt(jtMaxIterations.getText()));
           fractalViewJPanel1.regenerate();
    }//GEN-LAST:event_jtMaxIterationsActionPerformed

    private void jMenuItemEditColoursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEditColoursActionPerformed
          ColorRangeJDialog  crjd = new ColorRangeJDialog(this,fractalViewJPanel1);
          crjd.setVisible(true);
    }//GEN-LAST:event_jMenuItemEditColoursActionPerformed

    private void jMenuItemSquareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSquareActionPerformed
         fractalViewJPanel1.setAspectRatio(FractalViewJPanel.ASPECT_RATIO_SQUARE);
    }//GEN-LAST:event_jMenuItemSquareActionPerformed

    private void jMenuItemALandscapeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemALandscapeActionPerformed
         fractalViewJPanel1.setAspectRatio(FractalViewJPanel.ASPECT_RATIO_A_LANDSCAPE);
    }//GEN-LAST:event_jMenuItemALandscapeActionPerformed

    private void jMenuItemAPortraitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAPortraitActionPerformed
         fractalViewJPanel1.setAspectRatio(FractalViewJPanel.ASPECT_RATIO_A_PORTRAIT);
    }//GEN-LAST:event_jMenuItemAPortraitActionPerformed

    private void jMenuItemLoadPositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemLoadPositionActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.showOpenDialog(this);
        File file = chooser.getSelectedFile();
        if( file == null ) return;
        try{
            FileInputStream in = new FileInputStream(file);
            Properties p = new Properties();
            p.load(in);
            fractalViewJPanel1.setFractX(new BigDecimal((String)p.get("position.x")) );
            fractalViewJPanel1.setFractY(new BigDecimal( (String)p.get("position.y")) );
            fractalViewJPanel1.setFractWidth(new BigDecimal( (String)p.get("position.w")) );
            fractalViewJPanel1.setFractHeight(new BigDecimal( (String)p.get("position.h")) );
            String producer = (String)p.get("producer.class");
            try{
            fractalViewJPanel1.setProducer((Formula)Class.forName(producer).newInstance());
            }catch(ClassNotFoundException cnfe) {
            cnfe.printStackTrace();}
             catch(InstantiationException ie) {
             ie.printStackTrace();
             }
            catch(IllegalAccessException ie) {
                ie.printStackTrace();
            }
            in.close();
        }catch(IOException io) {
            io.printStackTrace();
        }
        fractalViewJPanel1.regenerate();
    }//GEN-LAST:event_jMenuItemLoadPositionActionPerformed
    
    private void jMenuItemSavePositionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSavePositionActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.showSaveDialog(this);
        File file = chooser.getSelectedFile();
        if( file == null ) return;
        if( !file.getName().endsWith(".pos")) {
            File file2 = new File(file.getParentFile(),file.getName()+".pos");
            file = file2;
        }

        try{
            FileOutputStream out = new FileOutputStream(file);
            Properties p = new Properties();
            p.put("position.x",fractalViewJPanel1.getFractX().toString());
            p.put("position.y",fractalViewJPanel1.getFractY().toString());
            p.put("position.w",fractalViewJPanel1.getFractWidth().toString());
            p.put("position.h",fractalViewJPanel1.getFractHeight().toString());
            p.put("producer.class",fractalViewJPanel1.getProducer().getClass().getName());
            p.save(out,"Fractal View");
            out.close();
        }catch(IOException io) {
            io.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItemSavePositionActionPerformed
    
    private void jmExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jmExitActionPerformed
    
    private void jMenuItemSaveAsPdfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveAsPdfActionPerformed
        SaveAsPdfJDialog sapjd = new SaveAsPdfJDialog(this,true,fractalViewJPanel1.getColourMap(),
                fractalViewJPanel1.getProducer(),fractalViewJPanel1.getFractX(),fractalViewJPanel1.getFractY(),
                fractalViewJPanel1.getFractWidth(),fractalViewJPanel1.getFractHeight(),fractalViewJPanel1.getAspectRatio(),fractalViewJPanel1.getMathContext());
        sapjd.setVisible(true);
    }//GEN-LAST:event_jMenuItemSaveAsPdfActionPerformed
    
    private void jMenuItemSaveAsJpegActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSaveAsJpegActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.showSaveDialog(this);
        File file = chooser.getSelectedFile();
        if( file == null ) return;
        BufferedImage bi = this.fractalViewJPanel1.getBufferedImage();
        try{
            FileOutputStream out = new FileOutputStream(file);
            if( file == null ) return;
            ImageWriter writer = null;
            Iterator iter = ImageIO.getImageWritersByFormatName("jpg");
            if (iter.hasNext()) {
                writer = (ImageWriter)iter.next();
            }
            
            // Prepare output file
            ImageOutputStream ios = ImageIO.createImageOutputStream(out);
            writer.setOutput(ios);
            
            // Set the compression quality
            ImageWriteParam iwparam = new JpegImageWriteParam();
            iwparam.setCompressionMode(ImageWriteParam.MODE_EXPLICIT) ;
            iwparam.setCompressionQuality(0.0f);
            
            // Write the image
            writer.write(null, new IIOImage(bi, null, null), iwparam);
            
            // Cleanup
            ios.flush();
            writer.dispose();
            ios.close();
        }catch(IOException io) {
            io.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItemSaveAsJpegActionPerformed
                            
    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
// TODO add your handling code here:
        fractalViewJPanel1.setFractX(new BigDecimal("-1.5"));
        fractalViewJPanel1.setFractY(new BigDecimal("-1.0"));
        fractalViewJPanel1.setFractWidth(new BigDecimal("2"));
        fractalViewJPanel1.setFractHeight(new BigDecimal("2"));
        fractalViewJPanel1.regenerate();
    }//GEN-LAST:event_jButtonResetActionPerformed
                        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FractalJFrame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup fractalButtonGroup;
    private fractal.gui.FractalViewJPanel fractalViewJPanel1;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenuAspect;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuColours;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenu jMenuFractal;
    private javax.swing.JMenuItem jMenuItem128Places;
    private javax.swing.JMenuItem jMenuItem32Places;
    private javax.swing.JMenuItem jMenuItem64Places;
    private javax.swing.JMenuItem jMenuItemALandscape;
    private javax.swing.JMenuItem jMenuItemAPortrait;
    private javax.swing.JMenuItem jMenuItemEditColours;
    private javax.swing.JMenuItem jMenuItemHardware;
    private javax.swing.JMenuItem jMenuItemLoadColourScheme;
    private javax.swing.JMenuItem jMenuItemLoadPosition;
    private javax.swing.JMenuItem jMenuItemSaveAsJpeg;
    private javax.swing.JMenuItem jMenuItemSaveAsPdf;
    private javax.swing.JMenuItem jMenuItemSaveColourScheme;
    private javax.swing.JMenuItem jMenuItemSavePosition;
    private javax.swing.JMenuItem jMenuItemSquare;
    private javax.swing.JMenu jMenuPrecision;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemCubic;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemCubicJulia;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemFastMandelbrot;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemJulia;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemMandelbrot;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemQuartic;
    private javax.swing.JRadioButtonMenuItem jRadioButtonMenuItemSquareCube;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenuItem jmExit;
    private javax.swing.JTextField jtMaxIterations;
    // End of variables declaration//GEN-END:variables
    
    /**
     * Holds value of property fractalView.
     */
    private FractalViewJPanel fractalView = new FractalViewJPanel();
    
    /**
     * Getter for property fractalView.
     * @return Value of property fractalView.
     */
    public FractalViewJPanel getFractalView() {
        return this.fractalView;
    }
    
    /**
     * Setter for property fractalView.
     * @param fractalView New value of property fractalView.
     */
    public void setFractalView(FractalViewJPanel fractalView) {
        this.fractalView = fractalView;
    }
    
}
